}
for (t in 1:length(traits)){
delta_trait[[t]][,(Ntips+1)] <- rep(0, length(traits[[1]][,1]))
}
for (t in 1:length(traits)){
for (i in 1:length(v1)){
delta_trait[[t]][,v2[i]] <- as.numeric(traits[[t]][, v2[i]] - traits[[t]][, v1[i]])
}
}
DeltaTraitList <- c(DeltaTraitList, delta_trait)
# Euclidean Distance
distance <- sqrt((delta_trait[[1]])^2 + (delta_trait[[2]])^2)
Euclid_dist <- c(Euclid_dist, distance)
# Diffusivity
Path <- sum(tr$edge.length) + tr$root.edge
D <-  rowSums(distance)/Path
}
for (N in 1:10){
# Generating Test Sequence
phylogram <- tr
phylogram$edge.length <- phylogram$edge.length * 1E-2
aln <- as.DNAbin(simSeq(phylogram, l = 5000))
write.dna(aln, file = paste0("BMtest_sigma", R[1,1], '_', R[2,2],"corr", R[1,2], '_', R[2,1], 'D', round(D[N],2),'N', N, '.fasta'),
format = 'fasta', nbcol = -1, colsep = '')
}
Euclid_dist <- matrix()
TraitsList <- list()
DeltaTraitList <- list()
traits <- list()
D <- numeric()
Diffusivity <- vector()
setwd("~/Desktop/Doherty Work/Brownian_Motion_project/PreliminaryInferences/")
for (N in 1:1) {
# 5 tips => 2N-2 (exclude root) Add
# But, we assume the root node is fixed at zero so it is not an RV => 8 measurements for each trait
mu <- matrix(c(rep(0,18),rep(0,18)), ncol = 1)
R <- matrix(c(1, 1, 1, 2), 2)
C <- vcvPhylo(tr, anc.nodes = T)
V <- kronecker(R, C)
sim_traits <- mvrnorm(n = 10, mu = mu, Sigma = V)
# Break into m = 2 trait matrices of p obs x n nodes. Store in lists. Each element of the list is the matrix for a given trait
# Write as quasi-function to start
for (i in 1:Ntraits) {
traits[[i]] <- sim_traits[,((i-1)*18+1):(18*i)]
}
# Adding in column for root node
Ntips <- length(tr$tip.label)
Nnodes <- 2*Ntips-2
for (i in 1:length(traits)){
traits[[i]] <- cbind(traits[[i]][,1:Ntips], rep(0, length(sim_traits[,1])), traits[[i]][,(Ntips+1):Nnodes])
}
TraitsList <- c(TraitsList, traits)
# Getting differences using edge objct
v1 <- tr$edge[,1]
v2 <- tr$edge[,2]
delta_trait <- list()
for (t in 1:length(traits)){
delta_trait[[t]] <- matrix(NA, nrow = nrow(traits[[1]]), ncol = ncol(traits[[1]]))
}
for (t in 1:length(traits)){
delta_trait[[t]][,(Ntips+1)] <- rep(0, length(traits[[1]][,1]))
}
for (t in 1:length(traits)){
for (i in 1:length(v1)){
delta_trait[[t]][,v2[i]] <- as.numeric(traits[[t]][, v2[i]] - traits[[t]][, v1[i]])
}
}
DeltaTraitList <- c(DeltaTraitList, delta_trait)
# Euclidean Distance
distance <- sqrt((delta_trait[[1]])^2 + (delta_trait[[2]])^2)
Euclid_dist <- c(Euclid_dist, distance)
# Diffusivity
Path <- sum(tr$edge.length) + tr$root.edge
D <-  rowSums(distance)/Path
}
for (N in 1:10){
# Generating Test Sequence
phylogram <- tr
phylogram$edge.length <- phylogram$edge.length * 1E-2
aln <- as.DNAbin(simSeq(phylogram, l = 5000))
write.dna(aln, file = paste0("BMtest_sigma", R[1,1], '_', R[2,2],"corr", R[1,2], '_', R[2,1], 'D', round(D[N],2),'N', N, '.fasta'),
format = 'fasta', nbcol = -1, colsep = '')
}
paste0()
tr$tip.label
write.tree(tr, file = "ReferenceTree_20tips_labmda2_death1_samprob0.1.nwk")
paste0(tr$tip.label, '_v1')
paste0(tr$tip.label, '_', traits[[1]][,1:10], '_', traits[[1]][,1:10], '_', tr$tip.label)
paste0(tr$tip.label, '_', traits[[1]][,1:10])
node.height(tr)
node.depth.edgelength()
node.depth.edgelength(tr)
library(NELSI)
allnode.times(tr, tipsonly = T, reverse = F)
paste0(tr$tip.label, '_', round(traits[[1]][,1:10],2), '_', round(traits[[2]][,1:10],2), '_', round(allnode.times(tr, tipsonly = T, reverse = F),2))
ound(traits[[1]][,1:10],2)
round(traits[[1]][,1:10],2)
paste0(tr$tip.label, '_', round(traits[[1]][N,1:10],2), '_', round(traits[[2]][N,1:10],2), '_', round(allnode.times(tr, tipsonly = T, reverse = F),2))
paste0(tr$tip.label, '_', round(traits[[1]][3,1:10],2), '_', round(traits[[2]][3,1:10],2), '_', round(allnode.times(tr, tipsonly = T, reverse = F),2))
for (N in 1:10){
# Generating Test Sequence
phylogram <- tr
tr$tip.label <- paste0(tr$tip.label, '_', round(traits[[1]][N,1:10],2), '_', round(traits[[2]][N,1:10],2), '_',
round(allnode.times(tr, tipsonly = T, reverse = F),2))
phylogram$edge.length <- phylogram$edge.length * 1E-2
aln <- as.DNAbin(simSeq(phylogram, l = 5000))
write.dna(aln, file = paste0("BMtest_sigma", R[1,1], '_', R[2,2],"corr", R[1,2], '_', R[2,1], 'D', round(D[N],2),'N', N, '.fasta'),
format = 'fasta', nbcol = -1, colsep = '')
}
N
tr$tip.label
for (N in 1:10){
# Generating Test Sequence
phylogram <- tr
tr$tip.label <- paste0(tr$tip.label, '_', round(traits[[1]][N,1:10],2), '_', round(traits[[2]][N,1:10],2), '_',
round(allnode.times(tr, tipsonly = T, reverse = F),2))
phylogram$edge.length <- phylogram$edge.length * 1E-2
aln <- as.DNAbin(simSeq(phylogram, l = 5000))
write.dna(aln, file = paste0("BMtest_sigma", R[1,1], '_', R[2,2],"corr", R[1,2], '_', R[2,1], 'D', round(D[N],2),'N', N, '.fasta'),
format = 'fasta', nbcol = -1, colsep = '')
}
tr$tip.label
tr <_ read.tree("ReferenceTree_20tips_labmda2_death1_samprob0.1.nwk")
tr <- read.tree("ReferenceTree_20tips_labmda2_death1_samprob0.1.nwk")
tiplabs <- tr$tip.label
for (N in 1:10){
# Generating Test Sequence
phylogram <- tr
tr$tip.label <- paste0(tiplabs, '_', round(traits[[1]][N,1:10],2), '_', round(traits[[2]][N,1:10],2), '_',
round(allnode.times(tr, tipsonly = T, reverse = F),2))
phylogram$edge.length <- phylogram$edge.length * 1E-2
aln <- as.DNAbin(simSeq(phylogram, l = 5000))
write.dna(aln, file = paste0("BMtest_sigma", R[1,1], '_', R[2,2],"corr", R[1,2], '_', R[2,1], 'D', round(D[N],2),'N', N, '.fasta'),
format = 'fasta', nbcol = -1, colsep = '')
}
tr <- sim.bdsky.stt(n = 20, lambdasky = 2, deathsky = 1, sampprobsky = 0.1,
timesky = 0)[[1]]
write.tree(tr, file - "ReferenceTree_20tips_labmda2_death1_samprob0.1.nwk")
write.tree(tr, file = "ReferenceTree_20tips_labmda2_death1_samprob0.1.nwk")
tr <- read.tree("ReferenceTree_20tips_labmda2_death1_samprob0.1.nwk")
tiplabs <- tr$tip.label
# D <- Diffisuvuty vector
Euclid_dist <- matrix()
TraitsList <- list()
DeltaTraitList <- list()
traits <- list()
D <- numeric()
Diffusivity <- vector()
Ntraits = 2
setwd("~/Desktop/Doherty Work/Brownian_Motion_project/PreliminaryInferences/")
for (N in 1:1) {
# 5 tips => 2N-2 (exclude root) Add
# But, we assume the root node is fixed at zero so it is not an RV => 8 measurements for each trait
mu <- matrix(c(rep(0,38),rep(0,38)), ncol = 1)
R <- matrix(c(1, 1, 1, 1), 2)
C <- vcvPhylo(tr, anc.nodes = T)
V <- kronecker(R, C)
sim_traits <- mvrnorm(n = 10, mu = mu, Sigma = V)
# Break into m = 2 trait matrices of p obs x n nodes. Store in lists. Each element of the list is the matrix for a given trait
# Write as quasi-function to start
for (i in 1:Ntraits) {
traits[[i]] <- sim_traits[,((i-1)*38+1):(38*i)]
}
# Adding in column for root node
Ntips <- length(tr$tip.label)
Nnodes <- 2*Ntips-2
for (i in 1:length(traits)){
traits[[i]] <- cbind(traits[[i]][,1:Ntips], rep(0, length(sim_traits[,1])), traits[[i]][,(Ntips+1):Nnodes])
}
TraitsList <- c(TraitsList, traits)
# Getting differences using edge objct
v1 <- tr$edge[,1]
v2 <- tr$edge[,2]
delta_trait <- list()
for (t in 1:length(traits)){
delta_trait[[t]] <- matrix(NA, nrow = nrow(traits[[1]]), ncol = ncol(traits[[1]]))
}
for (t in 1:length(traits)){
delta_trait[[t]][,(Ntips+1)] <- rep(0, length(traits[[1]][,1]))
}
for (t in 1:length(traits)){
for (i in 1:length(v1)){
delta_trait[[t]][,v2[i]] <- as.numeric(traits[[t]][, v2[i]] - traits[[t]][, v1[i]])
}
}
DeltaTraitList <- c(DeltaTraitList, delta_trait)
# Euclidean Distance
distance <- sqrt((delta_trait[[1]])^2 + (delta_trait[[2]])^2)
Euclid_dist <- c(Euclid_dist, distance)
# Diffusivity
Path <- sum(tr$edge.length) + tr$root.edge
D <-  rowSums(distance)/Path
# Tip Labels
}
for (N in 1:10){
# Generating Test Sequence
phylogram <- tr
tr$tip.label <- paste0(tiplabs, '_', round(traits[[1]][N,1:10],2), '_', round(traits[[2]][N,1:10],2), '_',
round(allnode.times(tr, tipsonly = T, reverse = F), 2))
phylogram$edge.length <- phylogram$edge.length * 1E-2
aln <- as.DNAbin(simSeq(phylogram, l = 5000))
write.dna(aln, file = paste0("BMtest_sigma", R[1,1], '_', R[2,2],"corr", R[1,2], '_', R[2,1], 'D', round(D[N],2),'N', N, '.fasta'),
format = 'fasta', nbcol = -1, colsep = '')
}
Euclid_dist <- matrix()
TraitsList <- list()
DeltaTraitList <- list()
traits <- list()
D <- numeric()
Diffusivity <- vector()
for (N in 1:1) {
# 5 tips => 2N-2 (exclude root) Add
# But, we assume the root node is fixed at zero so it is not an RV => 8 measurements for each trait
mu <- matrix(c(rep(0,38),rep(0,38)), ncol = 1)
R <- matrix(c(1, 1, 1, 2), 2)
C <- vcvPhylo(tr, anc.nodes = T)
V <- kronecker(R, C)
sim_traits <- mvrnorm(n = 10, mu = mu, Sigma = V)
# Break into m = 2 trait matrices of p obs x n nodes. Store in lists. Each element of the list is the matrix for a given trait
# Write as quasi-function to start
for (i in 1:Ntraits) {
traits[[i]] <- sim_traits[,((i-1)*38+1):(38*i)]
}
# Adding in column for root node
Ntips <- length(tr$tip.label)
Nnodes <- 2*Ntips-2
for (i in 1:length(traits)){
traits[[i]] <- cbind(traits[[i]][,1:Ntips], rep(0, length(sim_traits[,1])), traits[[i]][,(Ntips+1):Nnodes])
}
TraitsList <- c(TraitsList, traits)
# Getting differences using edge objct
v1 <- tr$edge[,1]
v2 <- tr$edge[,2]
delta_trait <- list()
for (t in 1:length(traits)){
delta_trait[[t]] <- matrix(NA, nrow = nrow(traits[[1]]), ncol = ncol(traits[[1]]))
}
for (t in 1:length(traits)){
delta_trait[[t]][,(Ntips+1)] <- rep(0, length(traits[[1]][,1]))
}
for (t in 1:length(traits)){
for (i in 1:length(v1)){
delta_trait[[t]][,v2[i]] <- as.numeric(traits[[t]][, v2[i]] - traits[[t]][, v1[i]])
}
}
DeltaTraitList <- c(DeltaTraitList, delta_trait)
# Euclidean Distance
distance <- sqrt((delta_trait[[1]])^2 + (delta_trait[[2]])^2)
Euclid_dist <- c(Euclid_dist, distance)
# Diffusivity
Path <- sum(tr$edge.length) + tr$root.edge
D <-  rowSums(distance)/Path
# Tip Labels
}
for (N in 1:10){
# Generating Test Sequence
phylogram <- tr
tr$tip.label <- paste0(tiplabs, '_', round(traits[[1]][N,1:10],2), '_', round(traits[[2]][N,1:10],2), '_',
round(allnode.times(tr, tipsonly = T, reverse = F), 2))
phylogram$edge.length <- phylogram$edge.length * 1E-2
aln <- as.DNAbin(simSeq(phylogram, l = 5000))
write.dna(aln, file = paste0("BMtest_sigma", R[1,1], '_', R[2,2],"corr", R[1,2], '_', R[2,1], 'D', round(D[N],2),'N', N, '.fasta'),
format = 'fasta', nbcol = -1, colsep = '')
}
for (N in 1:1) {
#
Euclid_dist <- matrix()
TraitsList <- list()
DeltaTraitList <- list()
traits <- list()
D <- numeric()
Diffusivity <- vector()
#
# 5 tips => 2N-2 (exclude root) Add
# But, we assume the root node is fixed at zero so it is not an RV => 8 measurements for each trait
mu <- matrix(c(rep(0,38),rep(0,38)), ncol = 1)
R <- matrix(c(1, 0.5, 0.5, 2), 2)
C <- vcvPhylo(tr, anc.nodes = T)
V <- kronecker(R, C)
sim_traits <- mvrnorm(n = 10, mu = mu, Sigma = V)
# Break into m = 2 trait matrices of p obs x n nodes. Store in lists. Each element of the list is the matrix for a given trait
# Write as quasi-function to start
for (i in 1:Ntraits) {
traits[[i]] <- sim_traits[,((i-1)*38+1):(38*i)]
}
# Adding in column for root node
Ntips <- length(tr$tip.label)
Nnodes <- 2*Ntips-2
for (i in 1:length(traits)){
traits[[i]] <- cbind(traits[[i]][,1:Ntips], rep(0, length(sim_traits[,1])), traits[[i]][,(Ntips+1):Nnodes])
}
TraitsList <- c(TraitsList, traits)
# Getting differences using edge objct
v1 <- tr$edge[,1]
v2 <- tr$edge[,2]
delta_trait <- list()
for (t in 1:length(traits)){
delta_trait[[t]] <- matrix(NA, nrow = nrow(traits[[1]]), ncol = ncol(traits[[1]]))
}
for (t in 1:length(traits)){
delta_trait[[t]][,(Ntips+1)] <- rep(0, length(traits[[1]][,1]))
}
for (t in 1:length(traits)){
for (i in 1:length(v1)){
delta_trait[[t]][,v2[i]] <- as.numeric(traits[[t]][, v2[i]] - traits[[t]][, v1[i]])
}
}
DeltaTraitList <- c(DeltaTraitList, delta_trait)
# Euclidean Distance
distance <- sqrt((delta_trait[[1]])^2 + (delta_trait[[2]])^2)
Euclid_dist <- c(Euclid_dist, distance)
# Diffusivity
Path <- sum(tr$edge.length) + tr$root.edge
D <-  rowSums(distance)/Path
# Tip Labels
}
for (N in 1:10){
# Generating Test Sequence
phylogram <- tr
tr$tip.label <- paste0(tiplabs, '_', round(traits[[1]][N,1:10],2), '_', round(traits[[2]][N,1:10],2), '_',
round(allnode.times(tr, tipsonly = T, reverse = F), 2))
phylogram$edge.length <- phylogram$edge.length * 1E-2
aln <- as.DNAbin(simSeq(phylogram, l = 5000))
write.dna(aln, file = paste0("BMtest_sigma", R[1,1], '_', R[2,2],"corr", R[1,2], '_', R[2,1], 'D', round(D[N],2),'N', N, '.fasta'),
format = 'fasta', nbcol = -1, colsep = '')
}
for (N in 1:1) {
#
Euclid_dist <- matrix()
TraitsList <- list()
DeltaTraitList <- list()
traits <- list()
D <- numeric()
Diffusivity <- vector()
#
# 5 tips => 2N-2 (exclude root) Add
# But, we assume the root node is fixed at zero so it is not an RV => 8 measurements for each trait
mu <- matrix(c(rep(0,38),rep(0,38)), ncol = 1)
R <- matrix(c(1, 0.5, 0.5, 1), 2)
C <- vcvPhylo(tr, anc.nodes = T)
V <- kronecker(R, C)
sim_traits <- mvrnorm(n = 10, mu = mu, Sigma = V)
# Break into m = 2 trait matrices of p obs x n nodes. Store in lists. Each element of the list is the matrix for a given trait
# Write as quasi-function to start
for (i in 1:Ntraits) {
traits[[i]] <- sim_traits[,((i-1)*38+1):(38*i)]
}
# Adding in column for root node
Ntips <- length(tr$tip.label)
Nnodes <- 2*Ntips-2
for (i in 1:length(traits)){
traits[[i]] <- cbind(traits[[i]][,1:Ntips], rep(0, length(sim_traits[,1])), traits[[i]][,(Ntips+1):Nnodes])
}
TraitsList <- c(TraitsList, traits)
# Getting differences using edge objct
v1 <- tr$edge[,1]
v2 <- tr$edge[,2]
delta_trait <- list()
for (t in 1:length(traits)){
delta_trait[[t]] <- matrix(NA, nrow = nrow(traits[[1]]), ncol = ncol(traits[[1]]))
}
for (t in 1:length(traits)){
delta_trait[[t]][,(Ntips+1)] <- rep(0, length(traits[[1]][,1]))
}
for (t in 1:length(traits)){
for (i in 1:length(v1)){
delta_trait[[t]][,v2[i]] <- as.numeric(traits[[t]][, v2[i]] - traits[[t]][, v1[i]])
}
}
DeltaTraitList <- c(DeltaTraitList, delta_trait)
# Euclidean Distance
distance <- sqrt((delta_trait[[1]])^2 + (delta_trait[[2]])^2)
Euclid_dist <- c(Euclid_dist, distance)
# Diffusivity
Path <- sum(tr$edge.length) + tr$root.edge
D <-  rowSums(distance)/Path
# Tip Labels
}
for (N in 1:10){
# Generating Test Sequence
phylogram <- tr
tr$tip.label <- paste0(tiplabs, '_', round(traits[[1]][N,1:10],2), '_', round(traits[[2]][N,1:10],2), '_',
round(allnode.times(tr, tipsonly = T, reverse = F), 2))
phylogram$edge.length <- phylogram$edge.length * 1E-2
aln <- as.DNAbin(simSeq(phylogram, l = 5000))
write.dna(aln, file = paste0("BMtest_sigma", R[1,1], '_', R[2,2],"corr", R[1,2], '_', R[2,1], 'D', round(D[N],2),'N', N, '.fasta'),
format = 'fasta', nbcol = -1, colsep = '')
}
for (N in 1:1) {
#
Euclid_dist <- matrix()
TraitsList <- list()
DeltaTraitList <- list()
traits <- list()
D <- numeric()
Diffusivity <- vector()
#
# 5 tips => 2N-2 (exclude root) Add
# But, we assume the root node is fixed at zero so it is not an RV => 8 measurements for each trait
mu <- matrix(c(rep(0,38),rep(0,38)), ncol = 1)
R <- matrix(c(1, 0, 0, 2), 2)
C <- vcvPhylo(tr, anc.nodes = T)
V <- kronecker(R, C)
sim_traits <- mvrnorm(n = 10, mu = mu, Sigma = V)
# Break into m = 2 trait matrices of p obs x n nodes. Store in lists. Each element of the list is the matrix for a given trait
# Write as quasi-function to start
for (i in 1:Ntraits) {
traits[[i]] <- sim_traits[,((i-1)*38+1):(38*i)]
}
# Adding in column for root node
Ntips <- length(tr$tip.label)
Nnodes <- 2*Ntips-2
for (i in 1:length(traits)){
traits[[i]] <- cbind(traits[[i]][,1:Ntips], rep(0, length(sim_traits[,1])), traits[[i]][,(Ntips+1):Nnodes])
}
TraitsList <- c(TraitsList, traits)
# Getting differences using edge objct
v1 <- tr$edge[,1]
v2 <- tr$edge[,2]
delta_trait <- list()
for (t in 1:length(traits)){
delta_trait[[t]] <- matrix(NA, nrow = nrow(traits[[1]]), ncol = ncol(traits[[1]]))
}
for (t in 1:length(traits)){
delta_trait[[t]][,(Ntips+1)] <- rep(0, length(traits[[1]][,1]))
}
for (t in 1:length(traits)){
for (i in 1:length(v1)){
delta_trait[[t]][,v2[i]] <- as.numeric(traits[[t]][, v2[i]] - traits[[t]][, v1[i]])
}
}
DeltaTraitList <- c(DeltaTraitList, delta_trait)
# Euclidean Distance
distance <- sqrt((delta_trait[[1]])^2 + (delta_trait[[2]])^2)
Euclid_dist <- c(Euclid_dist, distance)
# Diffusivity
Path <- sum(tr$edge.length) + tr$root.edge
D <-  rowSums(distance)/Path
# Tip Labels
}
for (N in 1:10){
# Generating Test Sequence
phylogram <- tr
tr$tip.label <- paste0(tiplabs, '_', round(traits[[1]][N,1:10],2), '_', round(traits[[2]][N,1:10],2), '_',
round(allnode.times(tr, tipsonly = T, reverse = F), 2))
phylogram$edge.length <- phylogram$edge.length * 1E-2
aln <- as.DNAbin(simSeq(phylogram, l = 5000))
write.dna(aln, file = paste0("BMtest_sigma", R[1,1], '_', R[2,2],"corr", R[1,2], '_', R[2,1], 'D', round(D[N],2),'N', N, '.fasta'),
format = 'fasta', nbcol = -1, colsep = '')
}
for (N in 1:1) {
#
Euclid_dist <- matrix()
TraitsList <- list()
DeltaTraitList <- list()
traits <- list()
D <- numeric()
Diffusivity <- vector()
#
# 5 tips => 2N-2 (exclude root) Add
# But, we assume the root node is fixed at zero so it is not an RV => 8 measurements for each trait
mu <- matrix(c(rep(0,38),rep(0,38)), ncol = 1)
R <- matrix(c(1, 0, 0, 1), 2)
C <- vcvPhylo(tr, anc.nodes = T)
V <- kronecker(R, C)
sim_traits <- mvrnorm(n = 10, mu = mu, Sigma = V)
# Break into m = 2 trait matrices of p obs x n nodes. Store in lists. Each element of the list is the matrix for a given trait
# Write as quasi-function to start
for (i in 1:Ntraits) {
traits[[i]] <- sim_traits[,((i-1)*38+1):(38*i)]
}
# Adding in column for root node
Ntips <- length(tr$tip.label)
Nnodes <- 2*Ntips-2
for (i in 1:length(traits)){
traits[[i]] <- cbind(traits[[i]][,1:Ntips], rep(0, length(sim_traits[,1])), traits[[i]][,(Ntips+1):Nnodes])
}
TraitsList <- c(TraitsList, traits)
# Getting differences using edge objct
v1 <- tr$edge[,1]
v2 <- tr$edge[,2]
delta_trait <- list()
for (t in 1:length(traits)){
delta_trait[[t]] <- matrix(NA, nrow = nrow(traits[[1]]), ncol = ncol(traits[[1]]))
}
for (t in 1:length(traits)){
delta_trait[[t]][,(Ntips+1)] <- rep(0, length(traits[[1]][,1]))
}
for (t in 1:length(traits)){
for (i in 1:length(v1)){
delta_trait[[t]][,v2[i]] <- as.numeric(traits[[t]][, v2[i]] - traits[[t]][, v1[i]])
}
}
DeltaTraitList <- c(DeltaTraitList, delta_trait)
# Euclidean Distance
distance <- sqrt((delta_trait[[1]])^2 + (delta_trait[[2]])^2)
Euclid_dist <- c(Euclid_dist, distance)
# Diffusivity
Path <- sum(tr$edge.length) + tr$root.edge
D <-  rowSums(distance)/Path
# Tip Labels
}
for (N in 1:10){
# Generating Test Sequence
phylogram <- tr
tr$tip.label <- paste0(tiplabs, '_', round(traits[[1]][N,1:10],2), '_', round(traits[[2]][N,1:10],2), '_',
round(allnode.times(tr, tipsonly = T, reverse = F), 2))
phylogram$edge.length <- phylogram$edge.length * 1E-2
aln <- as.DNAbin(simSeq(phylogram, l = 5000))
write.dna(aln, file = paste0("BMtest_sigma", R[1,1], '_', R[2,2],"corr", R[1,2], '_', R[2,1], 'D', round(D[N],2),'N', N, '.fasta'),
format = 'fasta', nbcol = -1, colsep = '')
}
